package meltysynth

import (
	"math"
	"testing"
)

func areEqual(t *testing.T, x float64, y float64) {
	max := math.Max(math.Abs(x), math.Abs(y))
	limit := max / float64(1000)
	delta := math.Abs(x - y)
	if delta > limit {
		t.Fail()
	}
}

func checkInstrumentRegion(t *testing.T, region *InstrumentRegion, values []float64) {
	areEqual(t, float64(region.GetSampleStart()), values[0])
	areEqual(t, float64(region.GetSampleEnd()), values[1])
	areEqual(t, float64(region.GetSampleStartLoop()), values[2])
	areEqual(t, float64(region.GetSampleEndLoop()), values[3])
	areEqual(t, float64(region.GetStartAddressOffset()), values[4])
	areEqual(t, float64(region.GetEndAddressOffset()), values[5])
	areEqual(t, float64(region.GetStartLoopAddressOffset()), values[6])
	areEqual(t, float64(region.GetEndLoopAddressOffset()), values[7])
	areEqual(t, float64(region.GetModulationLfoToPitch()), values[8])
	areEqual(t, float64(region.GetVibratoLfoToPitch()), values[9])
	areEqual(t, float64(region.GetModulationEnvelopeToPitch()), values[10])
	areEqual(t, float64(region.GetInitialFilterCutoffFrequency()), values[11])
	areEqual(t, float64(region.GetInitialFilterQ()), values[12])
	areEqual(t, float64(region.GetModulationLfoToFilterCutoffFrequency()), values[13])
	areEqual(t, float64(region.GetModulationEnvelopeToFilterCutoffFrequency()), values[14])
	areEqual(t, float64(region.GetModulationLfoToVolume()), values[15])
	areEqual(t, float64(region.GetChorusEffectsSend()), values[16])
	areEqual(t, float64(region.GetReverbEffectsSend()), values[17])
	areEqual(t, float64(region.GetPan()), values[18])
	areEqual(t, float64(region.GetDelayModulationLfo()), values[19])
	areEqual(t, float64(region.GetFrequencyModulationLfo()), values[20])
	areEqual(t, float64(region.GetDelayVibratoLfo()), values[21])
	areEqual(t, float64(region.GetFrequencyVibratoLfo()), values[22])
	areEqual(t, float64(region.GetDelayModulationEnvelope()), values[23])
	areEqual(t, float64(region.GetAttackModulationEnvelope()), values[24])
	areEqual(t, float64(region.GetHoldModulationEnvelope()), values[25])
	areEqual(t, float64(region.GetDecayModulationEnvelope()), values[26])
	areEqual(t, float64(region.GetSustainModulationEnvelope()), values[27])
	areEqual(t, float64(region.GetReleaseModulationEnvelope()), values[28])
	areEqual(t, float64(region.GetKeyNumberToModulationEnvelopeHold()), values[29])
	areEqual(t, float64(region.GetKeyNumberToModulationEnvelopeDecay()), values[30])
	areEqual(t, float64(region.GetDelayVolumeEnvelope()), values[31])
	areEqual(t, float64(region.GetAttackVolumeEnvelope()), values[32])
	areEqual(t, float64(region.GetHoldVolumeEnvelope()), values[33])
	areEqual(t, float64(region.GetDecayVolumeEnvelope()), values[34])
	areEqual(t, float64(region.GetSustainVolumeEnvelope()), values[35])
	areEqual(t, float64(region.GetReleaseVolumeEnvelope()), values[36])
	areEqual(t, float64(region.GetKeyNumberToVolumeEnvelopeHold()), values[37])
	areEqual(t, float64(region.GetKeyNumberToVolumeEnvelopeDecay()), values[38])
	areEqual(t, float64(region.GetKeyRangeStart()), values[39])
	areEqual(t, float64(region.GetKeyRangeEnd()), values[40])
	areEqual(t, float64(region.GetVelocityRangeStart()), values[41])
	areEqual(t, float64(region.GetVelocityRangeEnd()), values[42])
	areEqual(t, float64(region.GetInitialAttenuation()), values[43])
	areEqual(t, float64(region.GetCoarseTune()), values[44])
	areEqual(t, float64(region.GetFineTune()), values[45])
	areEqual(t, float64(region.GetSampleModes()), values[46])
	areEqual(t, float64(region.GetScaleTuning()), values[47])
	areEqual(t, float64(region.GetExclusiveClass()), values[48])
	areEqual(t, float64(region.GetRootKey()), values[49])
}

func checkPresetRegion(t *testing.T, region *PresetRegion, values []float64) {

	areEqual(t, float64(region.GetModulationLfoToPitch()), values[0])
	areEqual(t, float64(region.GetVibratoLfoToPitch()), values[1])
	areEqual(t, float64(region.GetModulationEnvelopeToPitch()), values[2])
	areEqual(t, float64(region.GetInitialFilterCutoffFrequency()), values[3])
	areEqual(t, float64(region.GetInitialFilterQ()), values[4])
	areEqual(t, float64(region.GetModulationLfoToFilterCutoffFrequency()), values[5])
	areEqual(t, float64(region.GetModulationEnvelopeToFilterCutoffFrequency()), values[6])
	areEqual(t, float64(region.GetModulationLfoToVolume()), values[7])
	areEqual(t, float64(region.GetChorusEffectsSend()), values[8])
	areEqual(t, float64(region.GetReverbEffectsSend()), values[9])
	areEqual(t, float64(region.GetPan()), values[10])
	areEqual(t, float64(region.GetDelayModulationLfo()), values[11])
	areEqual(t, float64(region.GetFrequencyModulationLfo()), values[12])
	areEqual(t, float64(region.GetDelayVibratoLfo()), values[13])
	areEqual(t, float64(region.GetFrequencyVibratoLfo()), values[14])
	areEqual(t, float64(region.GetDelayModulationEnvelope()), values[15])
	areEqual(t, float64(region.GetAttackModulationEnvelope()), values[16])
	areEqual(t, float64(region.GetHoldModulationEnvelope()), values[17])
	areEqual(t, float64(region.GetDecayModulationEnvelope()), values[18])
	areEqual(t, float64(region.GetSustainModulationEnvelope()), values[19])
	areEqual(t, float64(region.GetReleaseModulationEnvelope()), values[20])
	areEqual(t, float64(region.GetKeyNumberToModulationEnvelopeHold()), values[21])
	areEqual(t, float64(region.GetKeyNumberToModulationEnvelopeDecay()), values[22])
	areEqual(t, float64(region.GetDelayVolumeEnvelope()), values[23])
	areEqual(t, float64(region.GetAttackVolumeEnvelope()), values[24])
	areEqual(t, float64(region.GetHoldVolumeEnvelope()), values[25])
	areEqual(t, float64(region.GetDecayVolumeEnvelope()), values[26])
	areEqual(t, float64(region.GetSustainVolumeEnvelope()), values[27])
	areEqual(t, float64(region.GetReleaseVolumeEnvelope()), values[28])
	areEqual(t, float64(region.GetKeyNumberToVolumeEnvelopeHold()), values[29])
	areEqual(t, float64(region.GetKeyNumberToVolumeEnvelopeDecay()), values[30])
	areEqual(t, float64(region.GetKeyRangeStart()), values[31])
	areEqual(t, float64(region.GetKeyRangeEnd()), values[32])
	areEqual(t, float64(region.GetVelocityRangeStart()), values[33])
	areEqual(t, float64(region.GetVelocityRangeEnd()), values[34])
	areEqual(t, float64(region.GetInitialAttenuation()), values[35])
	areEqual(t, float64(region.GetCoarseTune()), values[36])
	areEqual(t, float64(region.GetFineTune()), values[37])
	areEqual(t, float64(region.GetScaleTuning()), values[38])
}
