//kage:unit pixels

/*
    Warp Shader, based on Glitch Effect Shader by Yui Kinomoto @arlez80
    https://godotshaders.com/shader/glitch-effect-shader/

    MIT License
*/

package main

func random(seed float) float {
    return fract(543.2543 * sin(dot(vec2(seed, seed), vec2(3525.46, -54.3415))))
}

var Time float

func Fragment(destPosition vec4, srcPosition vec2, color vec4) vec4 {
    shake_power := 3.0
    shake_block_size := 30.5

    current := imageSrc0At(srcPosition)

    if imageSrc1At(srcPosition).a == 0 {
        return current
    }

    fixed_uv := srcPosition
    fixed_uv.x += (random((floor(srcPosition.x * shake_block_size ) / shake_block_size) + Time) - 0.5) * shake_power;
    fixed_uv.y += (random((floor(srcPosition.y * shake_block_size ) / shake_block_size) + Time) - 0.5) * shake_power;

    pixel_color := imageSrc0At(fixed_uv)

    return pixel_color;
}
